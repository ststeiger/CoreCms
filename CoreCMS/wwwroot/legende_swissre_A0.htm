<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <meta charset="utf-8" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>Legende</title>
    <!--
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=10.00, user-scalable=yes" />
    -->
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=0.00, maximum-scale=10.00, user-scalable=yes" />

    <script>
        // console.log(window.Promise);
        // window.Promise = null;
    </script>

    
    <script src="GeneratedScripts/loader.js?v=1"
            data-js="['js/ruler', 'js/contextMenu', 'js/AsyncAjax', 'js/dragElement', 'js/loadElements', 'js/HtmlTools']"
            data-js-ie="['js/polyfills/es6-promise-2.0.0.min', 'js/polyfills/classList']"
            data-css="['css/ruler']"
            data-css-iedge="['css/rulerIE']"></script>

    <!--
    https://stackoverflow.com/questions/35027046/difference-between-data-main-and-normal-script-loading
        'js/require1k.min.js',
    <script src="scripts/require.js"></script>
    <script>require(["scripts/main"])</script>
    -->

    <style type="text/css">

        *
        {
            margin: 0px;
            padding: 0px;
            box-sizing: border-box;
            #white-space-collapse: discard;
        }

    </style>


    <script>

        function forwardMouse(ele)
        {
            var referenceElement = ele.parentElement;
            var doc = ele.contentWindow.document;

            function getOffset(el)
            {
                let _x = 0, _y = 0;
                while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop))
                {
                    _x += el.offsetLeft - el.scrollLeft;
                    _y += el.offsetTop - el.scrollTop;
                    el = el.offsetParent;
                }

                // return { x: _x, y: _y };
                return { left: _x, top: _y };
            }

            function forwardContextMenu(e)
            {
                console.log("forwardContextMenu");
                e = e || event;
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                var ev = document.createEvent("MouseEvents");
                // alert(ele.parentElement.offsetLeft);
                //ev.initMouseEvent("click", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 2, null);
                //console.log(ele.parentElement);
                //ele.parentElement.dispatchEvent(ev);

                if (window.CustomEvent)
                {
                    var ce = new CustomEvent("contextmenu");
                    var bd = getOffset(referenceElement);

                    ce.pageX = (bd.left + e.pageX);
                    ce.pageY = (bd.top + e.pageY);
                    ele.parentElement.dispatchEvent(ce);
                }
                //else if (document.createEvent)
                //{
                //    var ev = document.createEvent('HTMLEvents');
                //    ev.initEvent('contextmenu', true, false);
                //    element.dispatchEvent(ev);
                //}

                return false;
            }

            function forwardMouseDown(e)
            {
                console.log("forwardMouseDown");

                e = e || event;
                // alert("oo");
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                // 0: touch, 1: left, 3: right
                if ((e.keyCode || e.which) == 3)
                    return;

                if (window.CustomEvent)
                {
                    var evt = new CustomEvent('mousedown', { bubbles: true, cancelable: false });
                    var bd = getOffset(referenceElement);
                    evt.pageX = bd.left + e.pageX;
                    evt.pageY = bd.top + e.pageY;
                    ele.parentElement.dispatchEvent(evt);
                }

            }

            function forwardMouseUp(e)
            {
                e = e || event;
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                if ((e.keyCode || e.which) == 3)
                    return;

                if (window.CustomEvent)
                {
                    var evt = new CustomEvent('mouseup', { bubbles: true, cancelable: false });
                    var bd = getOffset(referenceElement);
                    evt.pageX = bd.left + e.pageX;
                    evt.pageY = bd.top + e.pageY;
                    ele.parentElement.dispatchEvent(evt);
                }

            }

            function forwardMouseMove(e)
            {
                e = e || event;
                e.preventDefault ? e.preventDefault() : e.returnValue = false;

                if (window.CustomEvent)
                {
                    var evt = new CustomEvent('mousemove', { bubbles: true, cancelable: false });
                    var bd = getOffset(referenceElement);
                    evt.pageX = bd.left + e.pageX;
                    evt.pageY = bd.top + e.pageY;
                    ele.parentElement.dispatchEvent(evt);
                }
            }

            function forwardMouseEnter(e)
            {
                e = e || event;
                doc.documentElement.style.cursor = "move";
            };

            function forwardMouseOver(e)
            {
                e = e || event;
                doc.documentElement.style.cursor = "move";
            };


            doc.oncontextmenu = forwardContextMenu;
            doc.onmousedown = doc.ontouchstart = forwardMouseDown;
            doc.onmouseup = forwardMouseUp;
            doc.onmousemove = forwardMouseMove;
            doc.onmouseenter = forwardMouseEnter;
            doc.onmouseover = forwardMouseOver;
        } // End Function forwardMouse

    </script>




    <style>

        .lblLeft
        {
            display: inline-block;
            width: 3cm;
            font-family: Arial;
            font-size: 3mm;
            text-align: right;
            padding-right: 0.25cm;
            font-weight: bold;
        }

        select, option, input
        {
            font-family: Arial;
            font-size: 3mm;
            width: 3.5cm;
        }

            /*
            input[type="submit"], input[type="button"], a.button, a.button:visited, button, .button, .btn {
                color: #ffffff;
                background-color: #0095ff;
                border-color: #0077cc;
                box-shadow: inset 0 1px 0 #66bfff;
            }
            */

        input[type="submit"], input[type="button"], a.button, a.button:visited, button, .button, .btn {
            color: #ffffff;
            background-color: #868686;
            border-color: #6B6B6B;
            box-shadow: inset 0 1px 0 #B6B6B6;
        }


        input[type="button"].red
        {
            color: #ffffff;
            background-color: #950000;
            border-color: #620000;
            box-shadow: inset 0 1px 0 #fb0000;
        }

        input[type="submit"], input[type="button"]
        , button, .button, .btn, [class*="btn-"]
        {
            box-sizing: border-box;
            display: inline-block;
            position: relative;
            outline: none;
            padding: 0mm 5mm;
            line-height: 10mm;
            vertical-align: middle;
            font-weight: 400;
            font-family: inherit;
            text-align: center;
            text-decoration: none;
            #background-color: transparent;
            border-radius: 5px;
            margin: 1mm;
            border: 1px solid transparent;
            cursor: pointer;
            touch-action: manipulation;
            transition: all .1s ease-in;
        }

        #paperMenu
        {
            transition: all .5s ease-in;
        }

        /*
        input[type="submit"]:hover, input[type="submit"]:focus, input[type="button"]:hover, input[type="button"]:focus, .btn:hover, .btn:focus, a.button:hover, a.button:focus, a.button:visited:hover, a.button:visited:focus, button:hover, button:focus, .button:hover, .button:focus {
            color: rgba(255, 255, 255, 0.9);
            background-color: #0077cc;
            border-color: #005999;
            box-shadow: inset 0 1px 0 #33aaff;
        }
        */


        input[type="submit"]:hover, input[type="submit"]:focus, input[type="button"]:hover, input[type="button"]:focus, .btn:hover, .btn:focus, a.button:hover, a.button:focus, a.button:visited:hover, a.button:visited:focus, button:hover, button:focus, .button:hover, .button:focus {
            color: rgba(255, 255, 255, 0.9);
            background-color: #6B6B6B;
            border-color: #505050;
            box-shadow: inset 0 1px 0 #9E9E9E;
        }



        input[type="button"].red:hover, input[type="button"].red:focus, .red:visited:hover, .red:visited:focus {
            color: rgba(255, 255, 255, 0.9);
            background-color: #620000;
            border-color: #2f0000;
            box-shadow: inset 0 1px 0 #c80000;
        }

        #saveNotifier
        {
            transition: all 0.75s ease-in-out;
            opacity: 0;
            top: 60%;
            left: 70%;
            background-color: limegreen;
        }

        .noselect
        {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

    </style>


</head>
<body style="z-index: 999999; background-color: lightgrey; ">

    <div style="z-index: 99999; display: block; position:relative;">

        <div id="measure" title="Select Paper Format" class="disable-select" style="position:absolute; left: 0cm; top: 0cm; cursor: pointer;
            background-color: #eaeaeabf; width: 1cm; height: 1cm; #border: 1px solid white;
        text-align: center; line-height: 1cm; font-size: 4.25mm;"></div>

        <div id="horizontalRuler" class="disable-select" style="position:absolute; left: 1cm; top: 0cm; white-space: nowrap;">
            <div style="display: inline-block; position:absolute; left: 0.0cm; top: 0.5cm; width: 0.5cm; height: 0.5cm; background-color: whitesmoke; "></div>
            <div class="ruler" style="background-color: whitesmoke; padding-right: 0.5cm"></div>
            <div class="scale" style="display: inline-block; position:absolute; left: 0.5cm; top: 0.5cm; background-color: whitesmoke;"></div>
        </div>

        <div id="verticalRuler" class="disable-select" style="position:absolute; left: 0cm; top: 1cm; width: 1cm; white-space: normal;">
            <div class="ruler" style="background-color: whitesmoke; padding-bottom: 0.5cm;"></div>
            <div class="scale" style="display: block; width: 1cm; position: absolute; top: 0.25cm; left: 0cm; z-index: 9999;"></div>
        </div>

        

        <div id="saveNotifier" class="noselect"></div>
            

        <style>

            #paperMenu {
                box-shadow: none !important;
                border-radius: 0mm !important;
                background-color: #444 !important;
            }


                #paperMenu h5 {
                    font-family: Arial;
                    #text-transform: uppercase;
                    color: #ffa500;
                    font-weight: bold !important;
                    background-color: black;
                    padding: 0.25cm;
                    padding-left: 0.75cm;
                    margin: -0.5cm;
                }

            #paperMenu label 
            {
                color: white;
                font-weight: normal !important;
            }


            #paperMenu {
                box-shadow: none !important;
                border-radius: 0mm !important;
                background-color: #444 !important;
            }

            /*
            input[type="submit"], input[type="button"], button, .button, .btn, [class*="btn-"] {
                border-radius: 0mm;
                filter: grayscale(100%);
            }
            */



        </style>


            <div id="paperMenu" style="display: none; ">
                
                <h5>Select legend to load</h5>
                <br />
                <br />

                <label class="lblLeft">Paper format</label>
                <select id="selPaperFormat"></select>
                <br />


                <label class="lblLeft">Layerset</label>
                <select id="selDarstellung">
                </select>
                <br />


                <label class="lblLeft">Category</label>
                <select id="selCathegory" onchange="PageDesigner.UI.toggleCustomCategory(this);">
                </select>
                <br /><br />


                <div id="customCategory" style="display: none;">

                    <!--
                    <div id="customCategory_DE" >
                        <label class="lblLeft">DE</label>
                        <input type="text" value="" placeholder="Name name" />
                    </div>

                    <div id="customCategory_FR" >
                        <label class="lblLeft">FR</label>
                        <input type="text" value="" placeholder="category name" />
                    </div>

                    <div id="customCategory_IT" >
                        <label class="lblLeft">IT</label>
                        <input type="text" value="" placeholder="custom name" />
                    </div>
                    -->

                    <div id="customCategory_EN" >
                        <label class="lblLeft">New Category</label>
                        <input id="txtNewCategory" type="text" value="" placeholder="e.g. ''Drawing Only''" />
                    </div>

                </div>

                
                <br />
                
                <div style="padding: 0.1cm; text-align: right; position: absolute; bottom: 3mm; left: 3mm; right: 3mm;">
                    <input type="button" value="Apply" onclick="PageDesigner.UI.mainMenuApply(this);" />
                </div>
                <!--
                <a class="btn" href="www.google.com">test</a>
                -->

            </div>
            
            
        <style>

            .no-select 
            {
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
                cursor: default;
            }

            ul 
            {
                list-style: none;
                margin: 0;
                padding: 0;
                width: 6cm;
                #width: 25vh;
                #min-width: 4cm;
                #header -webkit-box-shadow: 0px 3px 5px rgba(100, 100, 100, 0.49);
                #-moz-box-shadow: 0px 3px 5px rgba(100, 100, 100, 0.49);
                #box-shadow: 0px 3px 5px rgba(100, 100, 100, 0.49);
                #-webkit-box-shadow: 1mm 1mm 3mm 0mm #A0A0A0;
                #-moz-box-shadow: 1mm 1mm 3mm 0mm #A0A0A0;
                #box-shadow: 0mm 0mm 3mm 1mm #A0A0A0;
                #box-shadow: none|h-shadow v-shadow blur spread color |inset|initial|inherit;
                #box-shadow: 0 0 5px #999;
                box-shadow: 0 0 1mm #999;
                #border: 0.1mm solid black;
                border-radius: 3mm;
                background-color: none;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            li 
            {
                padding-left: 0.2cm;
                padding-right: 0.2cm;
                padding-top: 0.1cm;
                padding-bottom: 0.1cm;
                #background-color: whitesmoke;
                #background-color: #FAFAFA;
                #background-color: #efefef;
                background-color: rgba(237,237,237,0.95);
                color: black;
                #background: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                #background: linear-gradient(to bottom, rgba(237,237,237,1) 0%, rgba(255,255,255,1) 47%, rgba(237,237,237,1) 100%);
                #font-family: "lucida sans unicode", sans-serif;
                font-family: "Proxima Nova", "Helvetica Neue", Arial, sans-serif;
                font-size: 12px;
                #font-size: 1vh;
            }

            li span 
            {
                padding-left: 3mm;
            }

            li:nth-child(even) 
            {
                #background-color: #efefef;
                #background-color: rgba(255,255,255,0.95);
                #background: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                #background: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(237,237,237,1) 47%, rgba(255,255,255,1) 100%);
            }

            li:first-child 
            {
                #background-color: greenyellow;
                #border-top-left-radius: 3mm;
                border-top-right-radius: 3mm;
            }

            li:last-child 
            {
                #background-color: yellow;
                border-bottom-left-radius: 3mm;
                border-bottom-right-radius: 3mm;
            }

            li:hover 
            {
                color: #fff;
                #background-color: #0066aa;
                #background-color: rgba(0,102,170,0.95);
                background-color: rgba(255, 0, 0, 0.95);
                cursor: pointer;
            }


            /*
            .context-menu-choice:hover, li:hover
            {
                background: rgba(255,255,255,1);
                background: -moz-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(255,255,255,1)), color-stop(47%, rgba(246,246,246,1)), color-stop(100%, rgba(237,237,237,1)));
                background: -webkit-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                background: -o-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                background: -ms-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                background: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(246,246,246,1) 47%, rgba(237,237,237,1) 100%);
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ededed', GradientType=0 );
            }
            */


            .context-menu-icon::before 
            {
                position: absolute;
                top: 50%;
                left: 0;
                width: 2em;
                font-family: "context-menu-icons";
                font-size: 1em;
                font-style: normal;
                font-weight: normal;
                line-height: 1;
                color: #2980b9;
                text-align: center;
                -webkit-transform: translateY(-50%);
                -ms-transform: translateY(-50%);
                -o-transform: translateY(-50%);
                transform: translateY(-50%);
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
            }

            .context-menu-icon-edit:before 
            {
                #content: "\EA05";
                content: "\2702";
            }

            .context-menu-icon-expand:after 
            {
                content: "\25ba";
                position: absolute;
                right: 0px;
                padding-right: 0.25cm;
                #transform: translateY(-50%);
            }

            li.expando:hover > ul 
            {
                display: block !important;
            }

            div > ul, div > ul > li:first-child 
            {
                border-top-left-radius: 3mm;
            }

        </style>



        <div id="contextmenu" style="position:absolute; display: block; transform-origin: 0 0; left: 10cm; top: 5cm;
                #background-color: #fffdf9; border: none;
                 ">
            <ul class="contextmenu-items" onmouseleave="PageDesigner.ContextMenu.closeContextMenu(this);">
                <li onclick="PageDesigner.ContextMenu.deleteElement(this);"><span>L&ouml;schen</span></li>

                <li class="context-menu-icon-expand expando" style="position: relative;">
                    <span>Align</span><ul style="position: absolute; top: 0px; display: none; left: 100%;">
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 1, 1);">Top-Left</li>
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 1, 2);">Top-Center</li>
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 1, 3);">Top-Right</li>

                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 2, 1);">Middle-Left</li>
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 2, 2);">Middle-Center</li>
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 2, 3);">Middle-Right</li>

                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 3, 1);">Bottom-Left</li>
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 3, 2);">Bottom-Center</li>
                        <li onclick="PageDesigner.ContextMenu.alignImage(this, 3, 3);">Bottom-Right</li>

                        <!--
                        <li class="context-menu-icon-expand expando" style="position: relative;">P2.5
                            <ul style="position: absolute; display: none; top: 0px; left: 100%;">
                                <li>P1</li>
                                <li>P2</li>
                                <li>P3</li>
                            </ul>
                        </li>
                        <li>p3</li>
                        -->
                    </ul>
                </li>


                <!-- in den Hintergrund -->
                <li onclick="PageDesigner.ContextMenu.alterZIndex(this, -1/0);"><span>Send to Back</span></li>
                <!-- in den Vordergrund -->
                <li onclick="PageDesigner.ContextMenu.alterZIndex(this, 1/0);"><span>Bring to Front</span></li>
                <!-- eine Ebene nach hinten -->
                <li onclick="PageDesigner.ContextMenu.alterZIndex(this, -1);"><span>Send Backward</span></li>
                <!-- eine Ebene nach vorne -->
                <li onclick="PageDesigner.ContextMenu.alterZIndex(this, +1);"><span>Bring Forward</span></li>
                <!-- Daten bearbeiten -->
                <li onclick="PageDesigner.ContextMenu.edit(this);"><span>Edit Data</span></li>
                <!-- Cut -->
                <li class="context-menu-icon-edit"><span>Cut</span></li>
                <!--<li style="height: 0mm;"></li>-->
            </ul>

        </div>
            
            
            <div id="page" style="z-index: 9999; display: block; position:relative;
left: 1cm; top: 1cm; 
width: 84.1cm; height: 118.9cm;
background-color: white; box-shadow: inset 1px 1px 0 rgba(0,0,0,.1), inset 0 -1px 0 rgba(0,0,0,.07);">

            </div>
            
            <div id="tools" style="background-color: #ecebeb; box-sizing: border-box; position:absolute; display: block;
left: 22cm; top: 1cm; width: 10cm; height: 100%;  ">
            

                <style>
                    .configElement {
                        display: block;
                        #width: 3cm;
                        height: 1cm;
                        line-height: 1cm;
                        vertical-align: middle;
                        padding-left: 0.25cm;
                        padding-right: 0.25cm;
                        text-align: left;
                        #background-color: #A5A5A5;
                    }

                    .configElement:nth-child(2n) {
                        background-color: #F0F0F0;
                    }

                </style>


                <style>
                    #components {
                    }

                    #components div {
                        font-family: Arial;
                        font-size: 12px;
                        border: 1px solid whitesmoke;
                    }

                </style>


                <div id="components">

                    <div style="font-weight: bold; background-color: black; color: #ffa500; padding: 0.25cm; ">
                        Components
                    </div>


                    <div class="configElement" onclick="PageDesigner.UI.addBorder();">
                        Border
                    </div>

                    <div class="configElement" onclick="PageDesigner.UI.addLogo();">
                        Logo
                    </div>

                    <div class="configElement" onclick="PageDesigner.UI.addTitle();">
                        Title
                    </div>

                    <div class="configElement" onclick="PageDesigner.UI.addDate();">
                        Date
                    </div>

                    <div class="configElement" onclick="PageDesigner.UI.addDrawing();">
                        Drawing
                    </div>

                    <div class="configElement" onclick="PageDesigner.UI.addLegend();">
                        Legend
                    </div>
                </div>


            </div>
            
        </div>
        
    <script>

        function registerShortcutKeys(e)
        {
            e = e || event;
            // console.log(e.keyCode);

            // if (e.keyCode == 116) // 116: F5  { } // End if F1 

            if (e.keyCode == 112) // 112: F1 
            {
                e.preventDefault() ? e.preventDefault() : e.returnValue = false;
                e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
                console.log("TODO: Open Help");
            } // End if F1 

            if (e.keyCode == 27) // 27: ESC 
            {
                console.log("Quitting contextmenu")
                e.preventDefault() ? e.preventDefault() : e.returnValue = false;
                e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
                document.getElementById("contextmenu").style.display = "none";
            } // End if ESC 

        } // End Function fkey 

        document.onkeydown = registerShortcutKeys;


        /*

        function removeStyle(styleDict, key)
        {
            var index = styleDict.indexOf(key);
            
            if (index > -1)
            {
                styleDict.splice(index, 1);
            }
            
        }

        function addStyle(styleDict, key, value)
        {
            styleDict.push(key);
            styleDict[key] = value;
        }

        function styleToDict(style)
        {
            var styleDict = [], kvp, key, kvps = style.split(";");
            for (var i = 0; i < kvps.length; i++)
            {
                kvp = kvps[i].split(':');
                key = kvp[0].toLowerCase().trim();
                if (key === "") continue;
                styleDict.push(key);
                styleDict[key] = kvp[1].trim();
            }
            
            return styleDict;
        }

        function dictToStyle(styleDict)
        {
            var style = "";
            for (var i = 0; i < styleDict.length; ++i)
            {
                style = style + styleDict[i] + ": " + styleDict[styleDict[i]] + "; ";
            }
            
            return style;
        }
        */


        function autoRun(e)
        {
            console.log("autoRun");
            // console.log("awww", e.detail.withError);
            PageDesigner.UI.mainMenu();
            //PageDesigner.UI.loadElements();
        }

        if (document.addEventListener) window.addEventListener("allScriptsLoaded", autoRun)
        else if (document.attachEvent) document.attachCustomEvent("allScriptsLoaded", autoRun);


        var ctxMenuElement = document.getElementById('contextmenu');
        var baseStyle = ctxMenuElement.style.cssText;


        window.onresize = function (e)
        {
            var event = window.event || e;
            // console.log("zoom event", window.devicePixelRatio);
            // https://stackoverflow.com/questions/1713771/how-to-detect-page-zoom-level-in-all-modern-browsers

            ctxMenuElement.setAttribute("style", baseStyle + "; transform: scale("
                + (1.0 / window.devicePixelRatio) // x
                + ", " + (1.0 / window.devicePixelRatio) // y
                + "); ");

            // console.log(ctxMenuElement.style.cssText);
            // transform: scale(x, y)

            // var width = window.innerWidth;
            // menu.style.fontSize = (width / 20) + 'px';

        }; // End window.onresize 

        window.onresize(null);


        //(function ()
        //{
        //    console.log("foo");
        //}());

    </script>

</body>
</html>
