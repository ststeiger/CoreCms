<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>AJAX test</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />
    <meta name="google" value="notranslate" />


    <style type="text/css">

        html, body
        {
            margin: 0px;
            padding: 0px;
            width: 100%;
            height: 100%;
        }

    </style>

    <!-- 6kb PolyFill for IE 11... -->
    <script src="polyfills/es6-promise-2.0.0.min.js"></script>
    <script src="GeneratedScripts/Ajax.js?v=1" type="module"></script>
    <!--
    <script src="GeneratedScripts/RequestChain.js?v=1"></script>
    <script src="GeneratedScripts/UrlHelper.js?v=1"></script>
    -->
</head>
<body>
    <h1 id="navi"></h1>

    <script type="text/javascript">
        var url = "lol";
        
        // console.log("url parameters", Http.URL.Parameters["no_cache"]);
        // console.log("url parameters", Http.URL.encode({ abc: "def", ghi: "jkl", diphthongs: "äöüÄÖÜ"}));

        function TestRawRequest()
        {
            var params =
                {
                    url: url,
                    method: "POST",
                    contentType: "application/json",
                    queryData: "",
                    postData: "",

                    onSuccess: function ()
                    {
                        console.log("onSuccess", arguments);
                    },

                    onError: function () { console.log("onError", arguments); },
                    onNetworkError: function () { console.log("onNetworkError", arguments); },
                    onCancel: function () { console.log("onCancel", arguments); },
                    onDone: function () { console.log("onDone", arguments); }
                }

            var a = new Http.Ajax();
            a.sendRequest(params);
        }


        function TestGet()
        {
            var pr = new Http.Get(url, { a: "hellO", b: "world" },
                function ()
                {
                    console.log("onSuccess", arguments);
                }
            );

            pr.send();
        }


        function TestPost()
        {
            var pr = new Http.Post(url, { a: "hellO", b: "world" },
                function ()
                {
                    console.log("onSuccess", arguments);
                }
            );

            pr.send();
        }


        function TestJSON()
        {
            var pr = new Http.Json(url, { a: "hellO", b: "world" },
                function (r)
                {
                    console.log("onSuccess", arguments);
                    console.log(r);
                }
            );

            pr.send();
        }

        /*
        function TestJsonP()
        {
            var p = new Http.JSONP();

            p.send({
                url: "jsonp",
                onSuccess: function (data)
                {
                    console.log("TestJsonP - onSuccess", data);
                },
                onError: function (args)
                {
                    console.log("TestJsonP - onError", args);
                }
            });
        }
        */

        // TestRawRequest();
        // TestGet();
        // TestPost();
        // TestJSON();
        // TestJsonP();




        function TestRequestChain()
        {
            var req1 = new Http.Json("lol", null, function (data) { console.log("i haz JSON data", data); });
            var req2 = new Http.Get("lol", null, function (data) { console.log("i haz GET data", data); });
            var req3 = new Http.Post("lol", null, function (data) { console.log("i haz POST data", data); });

            var req4 = new Http.JSONP("jsonp", { omg: "peanutzäöü" },
                function (data)
                {
                    console.log("i haz JSONP data", data);
                }
            );

            /*
            var req4 = new Http.JSONP({
                url: "jsonp",
                onSuccess: function (data)
                {
                    console.log("i haz JSONP data", data);
                }
                // queryData: { omg: "peanutzäöü" }
            });
            */


            new Http.RequestChain().add(req1).add(req2).add(req3).add(req4)
                .whenDone(
                function ()
                {
                    alert("RequestChain Completed !\nCheck the console for errors...");
                }.bind(this)
                ).process();
        }
        TestRequestChain();


        /* 
        async function TestAsyncRawRequest()
        {
            var params =
                {
                    url: url,
                    method: "POST",
                    contentType: "application/json"
                };
            
            try
            {
                var a = new Http.Ajax();
                var res = await a.sendAsync(params);
                console.log("res", res);
            }
            catch (e)
            {
                console.log("error", e);
            }

        } // End Function TestAsyncRawRequest 


        async function TestAsyncGetRequest()
        {
            try
            {
                var pr = new Http.Get(url, { a: "hellO", b: "world" });
                var res = await pr.sendAsync();
                console.log("res", res);
            }
            catch (e)
            {
                console.log("error", e);
            }
            
        } // End Function TestAsyncGetRequest 


        async function TestAsyncPostRequest()
        {
            try
            {
                var pr = new Http.Post(url, { a: "hellO", b: "world" });
                var res = await pr.sendAsync();
                console.log("res", res);
            }
            catch (e)
            {
                console.log("error", e);
            }
            
        } // End Function TestAsyncPostRequest 


        async function TestAsyncRawJSONRequest()
        {
            try
            {
                var pr = new Http.Json(url, { a: "hellO", b: "world" });
                var res = await pr.sendAsync();
                console.log("res", res);
            }
            catch (e)
            {
                console.log("error", e);
            }
            
            return res;
        } // End Function TestAsyncRawJSONRequest 


        async function TestAsyncJsonP()
        {
            try
            {
                var p = new Http.JSONP();
                var res = await p.sendAsync("jsonp");
                console.log("res", res);
                return res;
            }
            catch (e)
            {
                console.log("error", e);
            }
            
            return null;
        } // End Function TestAsyncJsonP 


        async function main()
        {
            // await TestAsyncRawRequest();
            // await TestAsyncGetRequest();
            // await TestAsyncPostRequest();
            // var res = await TestAsyncRawJSONRequest(); console.log(res);
             
            var res = await TestAsyncJsonP();
            //console.log("res - main", res)
        } // End Sub main 

        main();
        */

    </script>

</body>
</html>
